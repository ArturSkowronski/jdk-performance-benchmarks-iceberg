name: PetClinic Build Matrix

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        jdk: [ "8", "11", "23", "graalvm", "crac" ]
    steps:
      - uses: actions/checkout@v4

      - name: Start PetClinic container (${{ matrix.jdk }})
        run: |
          set -euxo pipefail
          case "${{ matrix.jdk }}" in
            crac)
              ARGS="23 crac"
              CRAC_IMAGE="ghcr.io/crac/openjdk17:latest"
              ;;
            graalvm)
              ARGS="graalvm"
              ;;
            *)
              ARGS="${{ matrix.jdk }}"
              ;;
          esac
          RUN_BACKGROUND=1 CONTAINER_NAME=petclinic CRAC_IMAGE="$CRAC_IMAGE" ./scripts/run_petclinic.sh $ARGS

      - name: Wait for PetClinic
        run: |
          set -euxo pipefail
          for i in {1..30}; do
            if curl -s http://localhost:8080 >/dev/null; then
              echo "PetClinic started"
              exit 0
            fi
            sleep 5
          done
          echo "PetClinic failed to start" >&2
          docker logs petclinic || true
          exit 1

      - name: Run JMeter test
        run: |
          set -euxo pipefail
          docker run --rm -v ${{ github.workspace }}/jmeter:/tests justb4/jmeter:5.5 -n -t /tests/petclinic.jmx -l /tests/results.jtl

      - name: Container logs
        if: always()
        run: docker logs petclinic || true

      - name: Stop PetClinic
        if: always()
        run: |
          set -euxo pipefail
          docker rm -f petclinic || true

      - name: Upload JMeter Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jmeter-results-${{ matrix.jdk }}
          path: jmeter/results.jtl
